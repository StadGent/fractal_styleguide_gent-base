// Colors.
$colors: (
  'cyan': #009de0,
  'cyan-wcag': #0085b3,
  'dark-gray': #2c3f48,
  'white': #fff,
  'blue': #0340c7,
  'teal': #29cfc9,
  'green': #41ba36,
  'lemon': #ffda00,
  'yellow': #fab600,
  'orange': #f95706,
  'red': #f20f36,
  'pink': #f09,
  'purple': #5a0ec4,
) !default;

// color values for color swatches.
$tints: (
  1: 10%,
  2: 25%,
  3: 50%,
  -1: 75%,
  -2: 50%,
  -3: 25%,
  -4: 10%,
  -5: 6%,
  -6: 2%,
) !default;

//
// A function to get a color from the colors map.
//
// @param $base-color [map]
//   The key of the color in the $colors map.
//
// @param $tint [map]
//   The tint to be applied to the base color.
//
@function color($base-color, $tint: 0) {
  @if $tint != 0 {
    @if $tint > 0 {
      @return shade($base-color, $tint);
    }
    @if $tint < 0 {
      @return tint($base-color, $tint);
    }
  }
  @else {
    @if not map-has-key($colors, $base-color) {
      @warn "`#{inspect($base-color)}` doesn't seem to be a valid base color.";
    }

    @return map-get($colors, $base-color);
  }
};

//
// A function to adjust the opacity of a base color.
//
// @param $base-color [map]
//   The base color to be modified.
//
// @param $tint [map]
//   The tint value to modify the base color with.
//
@function tint($base-color, $tint) {
  $color-white: #fff;

  @if not map-has-key($colors, $base-color) {
    @warn "`#{inspect($base-color)}` doesn't seem to be a valid base color.";
  }

  @if not map-has-key($tints, $tint) {
    @warn "`#{inspect($tint)}` doesn't seem to be a valid tint value.";
  }

  @return mix(map-get($colors, $base-color), $color-white, map-get($tints, $tint));
};

//
// A function to darken a base color.
//
// @param $base-color [map]
//   The base color to be modified.
//
// @param $tint [map]
//   The value to shade the base color with.
//
@function shade($base-color, $tint) {
  $color-black: #000;

  @if not map-has-key($colors, $base-color) {
    @warn "`#{inspect($base-color)}` doesn't seem to be a valid base color.";
  }

  @if not map-has-key($tints, $tint) {
    @warn "`#{inspect($tint)}` doesn't seem to be a valid tint value.";
  }

  @return mix($color-black, map-get($colors, $base-color), map-get($tints, $tint));
};

//
// THEMIFY SETTINGS.
//
$themes: (
  'default': (
    'section-background': color('white'),
    'section-text-color': color('dark-gray'),

    'selection-background': color('cyan-wcag'),
    'selection-color': color('white'),

    'heading-1-color': color('cyan'),
    'heading-2-color': color('cyan-wcag'),
    'heading-3-color': color('cyan-wcag'),
    'heading-4-color': color('cyan-wcag'),
    'heading-5-color': color('cyan-wcag'),
    'heading-6-color': color('cyan-wcag'),

    'description-color': color('dark-gray'),
    'figcaption-color': color('dark-gray'),

    'link-color': color('blue'),
    'link-color-hover': color('blue', -4),
    'link-text-decoration': underline,
    'link-text-decoration-hover': none,

    'cta-link-background': color('blue', 3),
    'cta-link-background-hover': color('white'),

    'cta-link-border': 1px solid color('dark-gray', 3),
    'cta-link-border-hover': 1px solid color('dark-gray', 3),

    'cta-link-title-color': color('blue', 3),
    'cta-link-title-color-hover': color('blue', 3),

    'cta-link-document-color': color('blue', 3),
    'cta-link-document-color-hover': color('blue'),

    'cta-link-icon-border': 1px solid color('dark-gray', 3),

    'field-description-background': color('dark-gray', -6),
    'field-description-color': color('dark-gray'),

    'field-color': color('dark-gray', 1),
    'field-color--success': color('dark-gray', 1),
    'field-color--error': color('red'),
    'field-background': color('cyan', -6),
    'field-background--focus': color('cyan', -5),
    'field-background--disabled': color('dark-gray', -6),
    'field-background--success': color('green', -6),
    'field-background--error': color('red', -6),
    'field-border': 1px solid color('dark-gray', -1),
    'field-border--focus': 1px solid color('cyan'),
    'field-border--disabled': 1px solid color('dark-gray', -3),
    'field-border--success': 1px solid color('green'),
    'field-border--error': 1px solid color('red'),
    'field-placeholder': color('dark-gray', -1),


    'fieldset-border': 1px solid color('dark-gray', -1),
    'fieldset-color': color('blue'),

    'field-error-background': color('red', -2),
    'field-error-color': color('dark-gray'),
    'field-error-border': color('red'),

    'label-color': color('dark-gray'),
    'label-optional-color': color('dark-gray'),

    'button-color': color('white'),
    'button-color-hover': color('white'),

    'button-background': color('blue'),
    'button-background-hover': color('blue', -2),

    'button-border': none,
    'button-border-hover': none,

    'tag-color': color('white'),
    'tag-color-hover': color('white'),

    'tag-background': color('dark-gray'),
    'tag-background-hover': color('dark-gray'),

    'form-steps-timeline-color': color('blue'),
    'form-steps-prefix-color': color('white'),

    'form-steps-inactive-step-label': color('dark-gray'),
    'form-steps-inactive-prefix-background': color('dark-gray'),
    'form-steps-inactive-prefix-color': color('white'),

    'form-steps-previous-step-label': color('green'),
    'form-steps-previous-step-background': color('green'),

    'form-steps-active-step-label': color('blue'),
    'form-steps-active-prefix-background': color('blue'),

    'hamburger-menu-background': color('blue', -2),
    'hamburger-menu-overlay-color': rgba(44, 63, 72, .6),

    'hamburger-menu-link-border': 1.5px solid color('blue', -2),
    'hamburger-menu-link-border-active': 1.5px solid color('blue', -2),
    'hamburger-menu-link-border-hover': 1.5px solid color('blue', -2),

    'hamburger-menu-link-background': transparent,
    'hamburger-menu-link-background-active': color('blue', -2),
    'hamburger-menu-link-background-hover': color('blue', -2),

    'hamburger-menu-link-color': color('white'),
    'hamburger-menu-link-color-active': color('white'),
    'hamburger-menu-link-color-hover': color('white'),

    'island-border': 1px solid color('blue', -2),
  )
) !default;

// Default $overwrite-themes map to overwrite above $theme map.
$overwrite-themes: () !default;
