// Dynamic system with different gutters and items spanning multiple columns.
// Calculation at the bottom.

ul[class^=grid-] {
  @include row();

  > li {
    width: 100%;
    list-style: none;
  }
}

.grid__show-more {
  margin: 20px 0;
  font-size: .9rem;
  text-align: center;
}

// Grid-2-1 is an irregular grid with non-equal columns.
ul.grid-2-1 {
  > li {
    @include col(12);

    @include tablet {
      @include col(6);
    }

    @include desktop {
      @include col(4);
    }

    &:first-child {
      @include desktop {
        flex-basis: calc(((100% - ($grid-gutter-width * 2)) / 3 * 2) + $grid-gutter-width);
        width: calc(((100% - ($grid-gutter-width * 2)) / 3 * 2) + $grid-gutter-width);
      }
    }
  }
}

//// GENERIC CODE FOR COLUMN WIDTH CALCULATION ON PHABLET. ////
@for $col from 1 through $grid-columns {
  ul.grid-#{$col} {
    > li {
      @include phablet {
        @include col(6);
      }
    }
  }
}

// Tablet version has a deviating nr of columns for grid 5 and 4.
ul.grid-5 {
  > li {
    @include tablet {
      @include col(3);
    }
  }
}

ul.grid-4 {
  > li {
    @include tablet {
      @include col(4);
    }
  }
}


// GENERIC CODE FOR COLUMN WIDTH CALCULATION ON DESKTOP. //
@for $col from 1 through $grid-columns {
  ul.grid-#{$col} {
    > li {
      @include desktop {
        @include col(calc($grid-columns/$col));
      }
    }
  }
}
